{"ast":null,"code":"var _jsxFileName = \"/Users/jg.8905/Documents/MetatronOg_Projects /GitHub_Repos/Solana Bot/src/dashboard/src/components/TradingActivity.jsx\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Chip, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableContainer = styled(TableContainer)(({\n  theme\n}) => ({\n  borderRadius: '8px',\n  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\n}));\n_c = StyledTableContainer;\nconst StatusChip = styled(Chip)(({\n  theme,\n  status\n}) => ({\n  backgroundColor: status === 'completed' ? theme.palette.success.light : status === 'pending' ? theme.palette.warning.light : theme.palette.error.light,\n  color: status === 'completed' ? theme.palette.success.dark : status === 'pending' ? theme.palette.warning.dark : theme.palette.error.dark\n}));\n_c2 = StatusChip;\nconst TradingActivity = () => {\n  // Example data - replace with real data from your bot\n  const trades = [{\n    id: 1,\n    timestamp: '2024-03-21 14:30:00',\n    pair: 'SOL/USDT',\n    type: 'Buy',\n    amount: '2.5 SOL',\n    price: '$98.45',\n    status: 'completed',\n    profit: '+$12.50'\n  }, {\n    id: 2,\n    timestamp: '2024-03-21 14:25:00',\n    pair: 'SOL/USDT',\n    type: 'Sell',\n    amount: '1.8 SOL',\n    price: '$97.80',\n    status: 'completed',\n    profit: '-$5.20'\n  }, {\n    id: 3,\n    timestamp: '2024-03-21 14:20:00',\n    pair: 'SOL/USDT',\n    type: 'Buy',\n    amount: '3.2 SOL',\n    price: '$97.50',\n    status: 'pending',\n    profit: 'Pending'\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Recent Trading Activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Pair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Profit/Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: trades.map(trade => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: trade.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: trade.pair\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: trade.type,\n                color: trade.type === 'Buy' ? 'primary' : 'secondary',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: trade.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: trade.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(StatusChip, {\n                label: trade.status,\n                status: trade.status,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              sx: {\n                color: trade.profit.startsWith('+') ? 'success.main' : trade.profit.startsWith('-') ? 'error.main' : 'text.secondary'\n              },\n              children: trade.profit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, trade.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TradingActivity;\nexport default TradingActivity;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTableContainer\");\n$RefreshReg$(_c2, \"StatusChip\");\n$RefreshReg$(_c3, \"TradingActivity\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Chip","Box","styled","jsxDEV","_jsxDEV","StyledTableContainer","theme","borderRadius","boxShadow","_c","StatusChip","status","backgroundColor","palette","success","light","warning","error","color","dark","_c2","TradingActivity","trades","id","timestamp","pair","type","amount","price","profit","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","align","map","trade","label","size","sx","startsWith","_c3","$RefreshReg$"],"sources":["/Users/jg.8905/Documents/MetatronOg_Projects /GitHub_Repos/Solana Bot/src/dashboard/src/components/TradingActivity.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Chip,\n  Box,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledTableContainer = styled(TableContainer)(({ theme }) => ({\n  borderRadius: '8px',\n  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n}));\n\nconst StatusChip = styled(Chip)(({ theme, status }) => ({\n  backgroundColor: status === 'completed' \n    ? theme.palette.success.light \n    : status === 'pending'\n    ? theme.palette.warning.light\n    : theme.palette.error.light,\n  color: status === 'completed'\n    ? theme.palette.success.dark\n    : status === 'pending'\n    ? theme.palette.warning.dark\n    : theme.palette.error.dark,\n}));\n\nconst TradingActivity = () => {\n  // Example data - replace with real data from your bot\n  const trades = [\n    {\n      id: 1,\n      timestamp: '2024-03-21 14:30:00',\n      pair: 'SOL/USDT',\n      type: 'Buy',\n      amount: '2.5 SOL',\n      price: '$98.45',\n      status: 'completed',\n      profit: '+$12.50',\n    },\n    {\n      id: 2,\n      timestamp: '2024-03-21 14:25:00',\n      pair: 'SOL/USDT',\n      type: 'Sell',\n      amount: '1.8 SOL',\n      price: '$97.80',\n      status: 'completed',\n      profit: '-$5.20',\n    },\n    {\n      id: 3,\n      timestamp: '2024-03-21 14:20:00',\n      pair: 'SOL/USDT',\n      type: 'Buy',\n      amount: '3.2 SOL',\n      price: '$97.50',\n      status: 'pending',\n      profit: 'Pending',\n    },\n  ];\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Recent Trading Activity\n      </Typography>\n      <StyledTableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Time</TableCell>\n              <TableCell>Pair</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Price</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"right\">Profit/Loss</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {trades.map((trade) => (\n              <TableRow key={trade.id}>\n                <TableCell>{trade.timestamp}</TableCell>\n                <TableCell>{trade.pair}</TableCell>\n                <TableCell>\n                  <Chip\n                    label={trade.type}\n                    color={trade.type === 'Buy' ? 'primary' : 'secondary'}\n                    size=\"small\"\n                  />\n                </TableCell>\n                <TableCell>{trade.amount}</TableCell>\n                <TableCell>{trade.price}</TableCell>\n                <TableCell>\n                  <StatusChip\n                    label={trade.status}\n                    status={trade.status}\n                    size=\"small\"\n                  />\n                </TableCell>\n                <TableCell align=\"right\" sx={{\n                  color: trade.profit.startsWith('+') ? 'success.main' : \n                         trade.profit.startsWith('-') ? 'error.main' : \n                         'text.secondary'\n                }}>\n                  {trade.profit}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </StyledTableContainer>\n    </Box>\n  );\n};\n\nexport default TradingActivity; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}